{"version":3,"sources":["webpack:///./src/components/index.jsx","webpack:///./src/components/constants.js","webpack:///./src/app.js"],"names":["_react","__webpack_require__","_marked","_constants","window","marked","App","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","getInput","e","setState","text","target","value","renderPreview","__html","_marked2","default","state","displayName","defaultState","constants","dummyText","_react2","createElement","StrictMode","className","id","onChange","dangerouslySetInnerHTML","React","PureComponent","module","exports","_reactDom","_index","ReactDom","render","_index2","document","getElementById"],"mappings":"sZAAA,IAAAA,EAAAC,EAAA,cACA,IAAAC,EAAAD,EAAA,eACA,IAAAE,EAAAF,EAAA,eACAA,EAAA,moBAGAG,OAAOC,OAASA,cAEVC,qBACJ,SAAAA,EAAYC,GAAOC,EAAAC,KAAAH,GAAA,IAAAI,EAAAC,EAAAF,MAAAH,EAAAM,WAAAC,OAAAC,eAAAR,IAAAS,KAAAN,KACXF,IADWG,EASnBM,SAAW,SAACC,GACVP,EAAKQ,UAAUC,KAAMF,EAAEG,OAAOC,SAVbX,EAYnBY,cAAgB,WACd,OAAQC,QAAQ,EAAAC,EAAAC,SAAOf,EAAKgB,MAAMP,QAXlCb,EAAIqB,YAAc,MAElB,IAAMC,GACJT,KAAMU,UAAUC,WAElBpB,EAAKgB,MAAQE,EAPI,OAAAlB,wCAgBV,IACAS,EAAQV,KAAKiB,MAAbP,KACP,OACEY,EAAAN,QAAAO,cAACD,EAAAN,QAAMQ,WAAP,KACEF,EAAAN,QAAAO,cAAA,OAAKE,UAAU,eACbH,EAAAN,QAAAO,cAAA,YACEG,GAAG,SACHd,MAAOF,EACPiB,SAAU3B,KAAKO,YAGnBe,EAAAN,QAAAO,cAAA,OAAKE,UAAU,gBACbH,EAAAN,QAAAO,cAAA,KAAGG,GAAG,UAAUE,wBAAyB5B,KAAKa,kCA7BtCgB,UAAMC,yBAmCTjC,mCC3CfkC,EAAOC,SACLX,qyCCDF,IAAA9B,EAAAC,EAAA,cACA,IAAAyC,EAAAzC,EAAA,cACA,IAAA0C,EAAA1C,EAAA,kEAEA2C,UAASC,OAAOd,EAAAN,QAAAO,cAACc,EAAArB,QAAD,MAAQsB,SAASC,eAAe","file":"bundle.297c4fffe5c3c239fd63.js","sourcesContent":["import React from 'react';\nimport marked from 'marked';\nimport constants from './constants.js';\nimport './main.scss';\n\n// workaround needed to pass the freecodecamp tests\nwindow.marked = marked;\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    App.displayName = 'App';\n\n    const defaultState = {\n      text: constants.dummyText\n    };\n    this.state = defaultState;\n  }\n  getInput = (e) => {\n    this.setState({text: e.target.value});\n  }\n  renderPreview = () => {\n    return {__html: marked(this.state.text)};\n  }\n\n  render() {\n    const {text} = this.state;\n    return (\n      <React.StrictMode>\n        <div className=\"column-left\">\n          <textarea\n            id=\"editor\"\n            value={text}\n            onChange={this.getInput}\n          />\n        </div>\n        <div className=\"column-right\">\n          <p id=\"preview\" dangerouslySetInnerHTML={this.renderPreview()} />\n        </div>\n      </React.StrictMode>\n    );\n  }\n}\nexport default App;\n","module.exports = {\n  dummyText: `# Welcome to my React Markdown Previewer!\n\n  ## This is a sub-heading...\n  ### And here's some other cool stuff:\n\n  Heres some code, \\`<div></div>\\`, between 2 backticks.\n\n  \\`\\`\\`\n  // this is multi-line code:\n\n  function anotherExample(firstLine, lastLine) {\n    if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n      return multiLineCode;\n    }\n  }\n  \\`\\`\\`\n\n  You can also make text **bold**... whoa!\n  Or _italic_.\n  Or... wait for it... **_both!_**\n  And feel free to go crazy ~~crossing stuff out~~.\n\n  There's also [links](https://www.freecodecamp.com), and\n  > Block Quotes!\n\n  And if you want to get really crazy, even tables:\n\n  Wild Header | Crazy Header | Another Header?\n  ------------ | ------------- | -------------\n  Your content can | be here, and it | can be here....\n  And here. | Okay. | I think we get it.\n\n  - And of course there are lists.\n    - Some are bulleted.\n       - With different indentation levels.\n          - That look like this.\n\n\n  1. And there are numbered lists too.\n  1. Use just 1s if you want!\n  1. But the list goes on...\n  - Even if you use dashes or asterisks.\n  * And last but not least, let's not forget embedded images:\n\n  ![React Logo w/ Text](https://goo.gl/Umyytc)`\n};\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/index.jsx';\n\nReactDom.render(<App/>, document.getElementById('app'));\n"],"sourceRoot":""}